[project]
name = "transcriber-web-app"
version = "0.1.0"
description = "Production-ready web application for transcribing large audio files using OpenAI's Whisper API with automatic chunking, real-time progress tracking, and multi-language translation."
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "transcriber-web-app", email = "transcriber@example.com" }
]
keywords = ["transcription", "whisper", "openai", "audio", "translation", "gradio"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core web framework
    "gradio>=4.0.0",
    
    # AI/ML APIs
    "openai>=1.0.0",
    
    # Audio processing
    "pydub>=0.25.1",
    "ffmpeg-python>=0.2.0",
    
    # Data validation and configuration
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    
    # Utilities
    "requests>=2.28.0",
    "json5>=0.9.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    
    # Code quality
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.scripts]
transcriber = "src.app:main"

[project.urls]
Homepage = "https://github.com/transcriber-web-app/transcriber-web-app"
Repository = "https://github.com/transcriber-web-app/transcriber-web-app"
Issues = "https://github.com/transcriber-web-app/transcriber-web-app/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pydub.*",
    "ffmpeg.*",
    "gradio.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"